name: Update for caddy

on:
  push:
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".gitignore"
    branches:
      - master
  pull_request:
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".gitignore"
    branches:
      - master
  schedule:
    - cron: "1 1 * * *"

env:
  image_name: caddy

jobs:
  check-updates:
    runs-on: ubuntu-latest
    outputs:
      build_caddy: ${{ steps.check_output.outputs.build_caddy }}
      caddy_version: ${{ steps.check_output.outputs.caddy_version }}
    steps:
      - name: Checkout the main branch
        uses: actions/checkout@v4
        with:
          ref: "master"
          token: ${{ secrets.GHCR_TOKEN}}

      - name: Checkout the state branch
        uses: actions/checkout@v4
        with:
          ref: "state"
          path: ".state"
          token: ${{ secrets.GHCR_TOKEN}}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Check Updates for dockerhub
        id: check_output
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          GHCR_TOKEN: ${{secrets.GHCR_PUSH_TOKEN}}
        run: |
          python -m pip install -U requests
          current_version=$(python scripts/get-dockerio-hash.py --repo caddy --tag builder)
          state_version=$(cat .state/state/caddy_amd64_linux_lastest.txt)
          if [[ "$current_version" != "$state_version" ]]; then
            echo "Update needed: $current_version available, $state_version installed"
            echo $current_version > .state/state/caddy_amd64_linux_lastest.txt
            echo "build_caddy=true" >> "$GITHUB_OUTPUT"
            echo "caddy_version=$current_version" >> "$GITHUB_OUTPUT"
          else
            echo "No update needed: $current_version available, $state_version installed"
            echo "build_caddy=false" >> "$GITHUB_OUTPUT"
          fi
          # echo $GITHUB_ENV
          # cat $GITHUB_ENV

  run-build:
    needs: check-updates
    if: ${{ needs.check-updates.outputs.build_caddy == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner}}
          password: ${{ secrets.GHCR_PUSH_TOKEN }}

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./app/caddy/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.image_name }}:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ env.image_name }}:latest
      
      - name: Publish to state branch
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update Caddy version to ${{ needs.check-updates.outputs.caddy_version }}"
          add: "state/caddy_amd64_linux_lastest.txt"
          default_author: user_info
          cwd: ".state"
